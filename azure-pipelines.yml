# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master
- refs/tags/*

pr:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'AnonymizationTool.sln'
  buildConfiguration: 'Release'

stages:
- stage: build
  displayName: Build
  jobs:
  - job: run_build
    strategy:
      matrix:
        x64:
          buildPlatform: 'x64'
          dotnetPlatform: 'win-x64'
        x86:
          buildPlatform: 'x86'
          dotnetPlatform: 'win-x86'

    steps:
    - checkout: self
      submodules: true

    - script: |
        dotnet tool install --global dotnet-project-licenses --version 1.1.1
        mkdir output

    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      displayName: 'nuget restore'
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      displayName: 'Build Solution'
      inputs:
        solution: '$(solution)'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
        msbuildArgs: '/p:RunWixToolsOutOfProc=true'

    - task: CmdLine@2
      displayName: copy and rename MSI
      inputs:
        script: copy AnonymizationTool.Installer\bin\$(buildPlatform)\Release\AnonymizationTool.Installer.msi output/setup-$(Build.SourceBranchName)-$(buildPlatform).msi
      condition: succeeded()

    - task: DotNetCoreCLI@2
      displayName: build self-containing exe
      inputs:
        command: publish
        arguments: -c $(buildConfiguration) -r $(dotnetPlatform) /p:PublishTrimmed=true /p:PublishSingleFile=true
        workingDirectory: AnonymizationTool
        publishWebProjects: false
        zipAfterPublish: false

    - task: CmdLine@2
      displayName: copy and rename self-containing exe
      inputs:
        script: copy AnonymizationTool\bin\Release\netcoreapp3.1\$(dotnetPlatform)\publish\AnonymizationTool.exe output/AnonymizationTool-$(buildPlatform).exe
      condition: succeeded()

    - task: PublishPipelineArtifact@1
      displayName: Publish exe and MSI to artifacts
      inputs:
        targetPath: output
        artifactName: output

- stage: publish
  displayName: Publish
  dependsOn:
  - build
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
  jobs:
  - job: Publish to GitHub
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        artifact: output


    - download: current
      artifact: artifacts

    - task: GitHubRelease@0
      displayName: Release to GitHub
      inputs:
        gitHubConnection: 'GitHub.com'
        repositoryName: schulit/anonymization-tool
        assets: |
          artifacts/setup-*.msi
          artifacts/AnonymizationTool-*.exe
      
